<img src = "https://habrastorage.org/webt/ta/gq/z3/tagqz3fsjdoj62pof0za8sgsoku.png" />
When it's necessary to evaluate the orientation angles you may have the question - which MEMS sensor to choose. Sensors developers provide a great amound of different parameters and it's a pretty hard deal to get the information about the quality of the sensor. 

Here's the description of the script for Octave/Matlab which allows to estimate the orientation angles errors from MEMS accelerometer and magnetometer measurements. The input data for script are datasheet parameters for the sensors. Article can be useful for those who start using MEMS sensors in their devices. You can find the project on <a href="https://github.com/DaryaMalafeeva/mems-errors"> GitHub</a>.
<habracut text = "This is how we solved this problem:" />
Accept the following conditions:
<ul> <li> We're going to estimate the orientation angles of the stationary device. <spoiler title = "Why?">
The orientation of the mobile device simply cannot be calculated using formulas and you'll have to use tricky algorithms. </spoiler> </li>
<li> We will use MEMS measurements of accelerometers and magnetometers to estimate angles. </li></ul>

<i> Bit of theory </i>
<h2> Orientation angles </h2>
<img src = "https://habrastorage.org/webt/0h/za/ze/0hzazeqlyderpj80nirkuuwustg.png" />
We will understand the orientation angles as the Euler Angles - Roll, Pitch and Yaw. They connect the body frame coordinate system XYZ and the local coordinate system East-North-Up (ENU). The Roll, Pitch and Yaw angles denote the rotation that the XYZ axes must make in order to move in the ENU axis. Accordingly, zero angles mean that the X axis of the object is oriented to the east, the Y axis of the object is oriented to the north, the Z axis is oriented up. The rotation order of the axes is from the last corner: first on Yaw (around Z axis), then on Pitch (around  Y axis) and then on Roll (around  X axis).
<h2> Accelerometer </h2> 
It's the sensor that measures the projection of apparent acceleration onto the sensitivity axis. It is apparent acceleration because the accelerometer measures gravity too even while the sensor is stationary. You can imagine the accelerometer as the weight on a spring. Its measured values are proportional to the degree of tention of the spring. If the accelerometer is stationary, the spring is stretched only by gravity. If the accelerometer is in a dynamic state then there'll be a sum of forces: inertia of the weight $inline$\left(F=m\overrightarrow{a}\right) $inline$ and gravity $inline$ \left (F_{g}=m\overrightarrow{g}\right) $inline$.

We accept the following model of measurements of the triad of orthogonal (mutually perpendicular) accelerometers:
$$display$$ a_{XYZ} = m_{a}\cdot A_{XYZ} + b_{a} + n_{a}, $$display$$ where $inline$ a_{XYZ} $inline$ is the measured acceleration in body frame coordinate system XYZ, $inline$ m_{a} $inline$ is the skew matrix of axes and scale factors of the accelerometer, $inline$ A_{XYZ} $inline$ is the true acceleration vector in body frame coordinate system XYZ, $inline$ b_{a} $inline$ is the accelerometer zero displacement vector, $inline$ n_{a} $inline$ is the measurement noise.

<i> Learn more about the axis skew matrix and scale factors </i>
The skew matrix of the axes and scale factors is as follows:
$$display$$ m_{a} =\begin{bmatrix} 1 + m_{a, 1,1} & m_{a, 1,2} & m_{a, 1,3} \\
m_{a, 2,1} & 1 + m_{a, 2,2} & m_{a, 2,3} \\
m_{a, 3,1} & m_{a, 3,2} & 1 + m_{a, 3,3}
\end {bmatrix}, $$display$$ where the elements are located on the main diagonal ($inline$ 1 + m_{a, 1,1}, 1 + m_{a, 2,2}, 1 + m_{a, 3,3} $inline$) are scale factors and their errors along the three axes of the accelerometer, and the remaining elements of the matrix are skews of the axes of the accelerometer.
<spoiler title = "Selecting accelerometer parameters from the datasheet">
<h3> Accelerometer MPU-9250: </h3>
<ul>
<li> Accelerometer Zero Offset - Zero-G Initial Calibration Tolerance ($inline$ \pm 60 mg $inline$ for $inline$ X, Y $inline$, $inline$ \pm 80 mg $inline$ for $inline$ Z $inline$) - for calculations we translate into units $inline$ g $inline$ multiplying by $inline$ 10^{-3}; $inline$</li>
        <li> The error of the scale factor - Initial Tolerance ($inline$ \pm3\% $inline$) - is expressed as a percentage. For calculations, you need to translate at times, multiplying by $inline$ 10^{-2};$inline$ </li>
        <li> Axis misalignment - Cross Axis Sensitivity ($inline$ \pm2\%$inline$) - also multiply by $inline$ 10^{-2}; $inline$ </li>
        <li> Accelerometer noise power spectral density - Noise Power Spectral Density $inline$ \left (300\frac{\mu g} {\sqrt{Hz}}\right) $inline$ - convert the numerator to $inline$ g $inline$ multiplying everything by $inline$10^{- 6};$inline$ </li>
<li> Bandwidth - Low Pass Filter Response $inline$ \left (5-260 Hz\right) $inline$ - shows the boundaries within which it can be changed. Set the maximum band. Anyway, errors will not be determined by noise; </li> 
Knowing the spectral density of the noise power and the passband of the sensor, you can calculate the standard deviation of the noise at the output of the sensor:
$$display$$ \sigma _ {noise}=G_{0} \cdot \sqrt{\Pi_{noise}}; $$display$$
</ul>
<h3> Accelerometer ADIS16488A: </h3>
<ul>
       <li> Zero offset - Bias Repeatability ($inline$\pm 16mg $inline$) - convert to $inline$ g $inline$ multiplying by $inline$ 10^{- 3}; $inline$ </li>
       <li> Scale factor error - (Sensitivity) Repeatability ($inline$ \pm0.5 \% $inline$) - translate from percent to times; </li>
       <li> Axes skew - Misalignment Axis to frame ($inline$ \pm1^{\circ} $inline$) - in degrees, translate by times (radians, because the values are small); </li>
       <li> Noise power spectral density - Noise Density $inline$ \left (0.063\frac{mg}{\sqrt{Hz}}rms\right) $inline$ - convert the numerator to $inline$ g; $inline$ </ li>
       <li> Bandwidth - $inline$ \left (3dB Bandwidth\right) $inline$ - choose the same as the MPU-9250; </li>
</ul>
</spoiler>
